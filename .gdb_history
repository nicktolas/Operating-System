set hold=0'
set hold=0
n
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
b kernel_funcs.c:291
set hold=0
c
print i
c
print i
n
s
n
print val
print provided_num 
n
print ret_buf 
n
print temp_buf 
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0 
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
n
set hold=0
n
s
set hold=-0
n
s
b doors_keyboard.c:32
set hold=0
c
s
n
s
print byte_read
b doors_keyboard.c:10
set hold=0
c
n
print curr_ps_conf.PS2_first_port_int
print curr_ps_config.PS2_first_port_int
print curr_ps_config.PS2_first_port_port
n
c
n
b doors_keyboard.c:22
set hold=0
c
print (uint8_t) curr_ps_config.PS2_first_port_int
b doors_keyboard.c:10
set hold=0
c
n
print read_status 
n
set hold=0
c
set hold=0
c
b doors_keyboard.c:25
set hold=0
c
print curr_ps_config->PS2_first_port_int
print curr_ps_config->PS2_first_port_clk
print read_status 
set hold=0
c
set hold=0
c
c
set hold=0
c
set hold=0
c
set hold=0
n
c
set hold=0
n
c
set hold=0
c
r 
c
set hold=0
c
c
set hold=0
c
set hold=0
n
c
b doors_keyboard.c:10
c
set hold=0
c
n
print read_status
n
c
b doors_keyboard.c:10
c
set hold=0
c
n
c
b doors_keyboard.c:10
set hold=0
c
n
c
b doors_keyboard.c:10
set hold=0
c
n
print read_staus
print read_status
c
set hold=0
n
c
set hold=0
n
set hold=0
n
s
n
set hold=09
set hold=0
n
s
n
set hold=0
n
s
n
set hold=0
n
s
n
set hold=-0
n
n
s
n
set hold=-0
set hold=0
n
s
n
set hold=0
c
print status
c
set hold=0
c
set hold=0
n
s
n
set hold=0
n
s
n
set hold=0
n
s
n
set hold=0
n
s
n
set hold=0
n
n
set hold=0
c
set hold=0
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
set hold=0
c
set hold=0
n
c
