n
s
s
n
set hold=0
n
set hold= 0
n
c
set hold=0
n
c
set hold=0
n
si
c
set hold =0
n
si
c
set hold=0
n
si
c
print asm_irs_10
print asm_isr_10
print asm_isr_11
print &asm_isr_11
print &asm_isr_128
set hold=0
n
print Int_Desc_Table_Entries[128]
dw "Int_Desc_Table_Entries[128]
dw Int_Desc_Table_Entries[128]
dw
dw Int_Desc_Table_Entries[128]sizeof(Call_Gate_Descriptor)
dw Int_Desc_Table_Entries[128] sizeof(Call_Gate_Descriptor)
c
set hold=0
n
print Int_Desc_Table_Entries[128]
c
set hold =0
n
print Int_Desc_Table_Entries[128]
si
n
si
set hold=0
n
si
s
print irq_num 
print error
print error_code
set hold=0
n
print irq_num 
set hold=0
n
print irq_num 
print error_num
print error_code
set hold=0
n
si
s
n
si
set hold=0
n
si
s
n
si
c
set hold=0
n
si
n
si
c
c
c
n
si
set hold=0
n
c
set hold=0
n
si
s
print irq_num 
s
print irq_num 
s
n
c
c
set hold=0
n
si
s
n
si
info frame
c
set hold=0
n
si
c
set hold=0
n
si
n
si
c
set hold=0
n
si
n
si
set hold=0
n
c
c
set hold=0
n
n
c
c
c
set hold=0
n
c
set hold=0
n
c
print interrupt_status 
c
set hold=0
n
c
n
c
set hold=0
n
c
c
set hold=0
c
c
set hold=0
n
n
c
c
set hold=0
c
print interrupt_status 
print RFLAGS
info registers
info registers rflags
info registers rflag
c
b kernel_interrupts.c:212
set hold=0
c
n
n
c
set hold=0
c
info registers
c
b kernel_interrupts.c:191
set hold=0
c
n
n
c
n
n
info registers
n
info registers
c
set hold=0
c
set hold=0
n
]
n
b kernel_interrupts.c:37
set hold=0
c
n
s
n
c
s
n
s
n
set hold=0
c
n
s
si
set hold=0
c
set hold=0
c
b kernel_interrupts.c:222
set hold=0
c
c
c
c
c
c
c
j
c
a
c
k
c
c
c
Â‡c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
n
c
c
set hold=0
c
set hold=0
n
set hold=0
n
