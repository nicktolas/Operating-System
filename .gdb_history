set hold=0
c
set hold = 0
c
set hold=0
c
set hold =0
c
set hold=0
c
c
b 1
c
n
set hold=0
c
b 1
c
n
set hold=0
n
n
b 1
c
n
set hole=0
c
set hold=0
c
b 1
c
n
set hold=0
n
c
n
set hold=0
n
b 1
c
n
b 1
c
n
set hold=0
n
b1
c
set hold=0
n
b 1
c
set hold=0
n
b 1
c
n
set hold=0
n
b 1
c
n
set hold=0
n
b 1
c
n
set hold=0
n
b 1
c
n
set hold-=0
n
set hold=0
n
print vga_cursor_row
n
print vga_cursor_row
b 1
c
n
set hold=0
n
b 1
c
n
set hold=0
n
b 1
c
n
set hold=0
n
b 1
c
n
set hold=0
n
b 1
c
n
set hold=0
n
set hold=0
n
set hold=0
n
set hold=0
n
set hold=0
n
set hold=0
n
print gva_row
print vga_row
print vga_cursor_row
set hold=0
n
set hold=0
n
set hold=0
n
set hold= 0
n
set hold=0
n
set hold=0
n
s
n
j
n
b 331
c
n
print provided_string
print provided_string[2]
print provided_string[3]
b 263
set hold=0
b 263
b 263:kernel_funcs.c
b 263;kernel_funcs.c
b 263.kernel_funcs.c
b kernel_funcs.c:263
c
print provided_num
print val
n
print i
print string_of_int
n
set hold=0
c
set hold=0
c
r
set hold=0
c
set hold=0
b kernel_funcs.c:257
c
print provided_num 
print base
n
print val
print ret_buf 
print temp
set hold=0
c
b kernel_funcs.c:257
set hold=0
c
print provided_num 
n
print temp_buf[i]
n
print temp_buf 
n
print temp_buf 
n
print ret_buf 
print ret_buf[0]
print i-j
print temp_buf[3]
print temp_buf[2]
n
print ret_buf 
print ret_buf[0] 
print ret_buf[1] 
print ret_buf[2]
print ret_buf[3]
print j
set hold=0
c
set hold=0
c
set hold=0'
set hold=0
n
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
b kernel_funcs.c:291
set hold=0
c
print i
c
print i
n
s
n
print val
print provided_num 
n
print ret_buf 
n
print temp_buf 
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0 
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
