n
c
c
set hold=0
n
si
c
c
set hold=0
n
si
si
c
set hold=0
n
s
n
s
n
s
n
c
n
set hold=0
n
s
n
s
n
si
n
s
si
c
set hold=0
n
c
set hold=0
n
s
n
n
s
n
si
n
c
set hold=0
n
c
set hold=0
n
c
c
set hold=0
n
s
n
c
set hold=0
n
s
n
s
n
s
n
c
set hold=0
n
c
c
set hold=0
n
info
info reg
n
info reg
p/x &GDT
p/x GDT.segments[1]
p (struct Segment_Descriptor) GDT.segments[1]
p/x GDT.segments[1]
c
set hold-=0
n
set hold=0
n
c
c
set hold=0
n
c
c
set hold=0
c
c
set hold=0
<<<<<<< Updated upstream
=======
n
n
set hold=0
n
set hold=0
n
c
c
set hold=0
>>>>>>> Stashed changes
c
c
set hold=0
n
c
c
set hold=0
n
c
c
c
set hold=0
c
c
set hold=0
n
c
n
c
set hold=0
c
set hold=0
n
c
set hold=0
n
n
c
c
set hold=0
c
set hold=0
c
c
c
c
set hold=0
n
c
c
set hold=0
c
set hold=0
c
c
set hold=0
c
c
set hold=0
n
si
n
si
n
c
c
set hold=0
n
si
n
si
n
c
set hold=0
c
set hold=0
c
set hold=0
n
c
set hold=0
n
c
print serial_state 
b kernel_serial.c:47
set hold=0
c
set hold=0
c
b kernel_serial.c:103
set hold=0
c
n
print serial_state
n
set hold=0
n
c
c
b kernel_serial.c:104
c
set hold=0
c
n
print read_byte 
n
print serial_state
set hold=0
c
print serial_state 
set hold=0
c
print serial_state 
set hold=0
c
set hold=0
c
print serial_state 
set hold=0
n
c
set hold=0
n
print serial_write
print serial_state
n
b kernel_serial.c:49
set hold=-
set hold=0
c
c
b kernel_serial.c:49
set hold=0
c
c
c
c
c
c
c
c
c
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
n
c
set hold=0
c
set hold=0
c
c
