c
set hold=0
c
set hold=0
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
set hold=0
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
set hold=0
c
set hold=0
c
c
set hold=0
c
set hold=0
c
set hold=0;
set hold=0
c
set hold=0
c
set hold=0
c
c
set hold=0
c
c
set hold=0
c
c
set hold =0 
c
set hold=0
c
c
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
c
b kernel_memory.c:291
c
set hold=0
c
n
set hold=0
b kernel_memory.c:291
c
s
n
b kernel_memory.c:370
set hold=0
c
s
n
c
set hold=0
n
set hold=0
n
s
s
n
s
n
s
n
b kernel_memory.c:356
set hold=0
c
n
print entry
print entry->pt_base_addr_q
print (struct Page_Table_Entry) PT2[i]
print (struct Page_Table_Entry*) PT2[i]
b kernel_memory.c:356
set hold=0
c
n
print entry
n
print entry
n
c
set hold=0
c
c
set hold=0
c
set hold=0
n
set hold=0
n
s
n
n
set hold=0
c
set hold=0
n
s
n
set hold=0
c
set hold=-0
c
set hold=0
c
set hold=0
n
s
n
si
si
set hold=0
c
set hold=0
c
set hold=0
c
set hold=0
n
s
s
n
s
n
set hold=0
n
s
s
n
s
n
print PT4-(void*)entry
print PT4 - (void*)entry
print (uint64_t)PT4 - (uint64_t)entry
print (uint64_t)PT4 - entry
print entry
print PT4
n
n
print PT3
s
n
set hold=0
c
set hold=0
n
s
s
n
s
n
print index
n
print entry
print entry->present
print print PT4
print PT4
print PT4+27
print PT4[27]
print PT4[26]
print PT4[25]
print PT4[24]
print PT4[23]
print PT4[22]
print PT4[21]
print PT4[20]
set hold=0
c
set hold-0
set hold=0
n
s
s
n
s
n
print PT[0}
print PT[0}
print PT[0]
print PT[1]
print PT[2]
print PT[3]
print PT[4]
print PT[5]
print PT[1]
print PT[2]
print PT[1]
print PT[2]
print PT[0]
print entry
n
print entry
print entry->present
print entry
print entry
print entry*
print entry
print entry->present
print PT[2]
set hold=0
n
s
n
s
n
c
set hold=0
c
set hold=0
n
n
s
s
print PT4
print PT4[0]
print PT4[1]
print PT4 + 1
print (PT4+1) [0]
print (PT4+2) [0]
print PT[0]
print PT4
print PT4[0]
